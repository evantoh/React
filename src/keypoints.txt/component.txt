A component is a small, reusable chunk of code that is responsible for one job. 
That job is often to render some HTML.

***code**
import React from 'react';//This is imported object that contains methods that you need in order to use React.The object is called the React library
import ReactDOM from 'react-dom';// methods imported from 'react-dom' are meant for interacting with the DOM

class MyComponentClass extends React.Component { //creating a component x that extends React.Component library,components name MUST start with (UpperCamelCase).
  render() {
    return <h1>Hello world</h1>;
  }
};

ReactDOM.render(
  <MyComponentClass />,//creating the component instance
  document.getElementById('app')
);

Here's another fact about components: every component must come from a *component class*.
  (Component class variable names must begin with capital letters!) NOTE
  A component class is like a factory that creates components.

  A render method must contain a return statement. Usually, this return statement returns a JSX expression
  JSX elements can be either HTML-like, or component instances. JSX uses capitalization to distinguish between the two! 
  that is the React-specific reason why component class names must begin with capital letters. 
  In a JSX element, that capitalized first letter says, "I will be a component instance and not an HTML tag.